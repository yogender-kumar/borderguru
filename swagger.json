{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "BorderGuru API's",
    "description": "Full Stack Developer assignment",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Orders-V1",
      "description": "API for orders in the system"
    },
    {
      "name": "Item-V1",
      "description": "API for items in the system"
    },
    {
      "name": "Customer-V1",
      "description": "API for customers in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/orders": {
      "get": {
        "tags": [
          "Orders-V1"
        ],
        "summary": "Get all orders in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders-V1"
        ],
        "summary": "Create new order in system",
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "description": "Order that we want to create",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New order is created",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    },
    "/orders/{orderId}": {
      "parameters": [
        {
          "name": "orderId",
          "in": "path",
          "required": true,
          "description": "ID of order that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Orders-V1"
        ],
        "summary": "Get order with given ID",
        "responses": {
          "200": {
            "description": "Order is found",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      },
      "patch": {
        "summary": "Update order with give ID",
        "tags": [
          "Orders-V1"
        ],
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "description": "Order with new values of properties",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order is updated",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete order with given ID",
        "tags": [
          "Orders-V1"
        ],
        "responses": {
          "200": {
            "description": "Order is deleted",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    },
    "/orders/byCustomerId/{customerId}": {
      "parameters": [
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "ID of customer for whome we want to search order",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Orders-V1"
        ],
        "summary": "Get order with given customer ID",
        "responses": {
          "200": {
            "description": "Order is found",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    },
    "/orders/byAddressId/{addressId}": {
      "parameters": [
        {
          "name": "addressId",
          "in": "path",
          "required": true,
          "description": "ID of customer for which we want to search order",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Orders-V1"
        ],
        "summary": "Get order with given address ID",
        "responses": {
          "200": {
            "description": "Order is found",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    },
    "/item/groupByName": {
      "get": {
        "tags": [
          "Item-V1"
        ],
        "summary": "Get item count group by name from orders collection & shorted by count",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/customers/{customerId}": {
      "parameters": [
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "ID of customer that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Customer-V1"
        ],
        "summary": "Get customer with given ID",
        "responses": {
          "200": {
            "description": "Customer is found",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        }
      },
      "patch": {
        "summary": "Update customer with give ID",
        "tags": [
          "Customer-V1"
        ],
        "parameters": [
          {
            "name": "customer",
            "in": "body",
            "description": "Customer with new values of properties",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer is updated",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        }
      }
    },
    "/customers/addAddress/{customerId}": {
      "parameters": [
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "ID of customer that we want to find",
          "type": "string"
        }
      ],
      "post": {
        "tags": [
          "Customer-V1"
        ],
        "summary": "Create new Address for the given customer in system",
        "parameters": [
          {
            "name": "address",
            "in": "body",
            "description": "Address that we want to create for the customer",
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New address is created for customer",
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        }
      }
    },
    "/customers/updateAddress/{addressId}": {
      "parameters": [
        {
          "name": "addressId",
          "in": "path",
          "required": true,
          "description": "ID of address that we want to update",
          "type": "string"
        }
      ],
      "patch": {
        "summary": "Update address with give ID",
        "tags": [
          "Customer-V1"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "body",
            "description": "Address with new values of properties",
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address is updated",
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        }
      }
    },
    "/customers/deleteAddress/{addressId}": {
      "parameters": [
        {
          "name": "addressId",
          "in": "path",
          "required": true,
          "description": "ID of address that we want to delete",
          "type": "string"
        }
      ],
      "delete": {
        "summary": "Delete address with given ID",
        "tags": [
          "Customer-V1"
        ],
        "responses": {
          "200": {
            "description": "Address is deleted",
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        }
      }
    },
    "/customers/getTotalAmount/{customerId}": {
      "parameters": [
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "ID of customer to get total amount",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Customer-V1"
        ],
        "summary": "Get total amount paid by the customer",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Order": {
      "required": [
        "customerId", "addressId", "itemName","price","currency"
      ],
      "properties": {
        "customerId": {
          "type": "string"
        },
        "addressId": {
          "type": "string"
        },
        "itemName": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "currency": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "required": ["customerName"],
      "properties": {
        "customerName":{
          "type": "string"
        }
      }
    },
    "Address": {
      "required": ["address"],
      "properties": {
        "address": {
            "type": "string"
          }
      }
    }
  }
}